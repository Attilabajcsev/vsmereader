FROM python:3.13-slim AS base

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN apt-get update -y && apt-get install -y --no-install-recommends \
    git build-essential libxml2-dev libxslt1-dev zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

FROM base AS arelle
RUN git clone https://github.com/Arelle/Arelle.git /opt/arelle \
    && cd /opt/arelle \
    && git checkout 122eb892bdcdd7692921bf0ac39e228807a1c4f4
RUN sh -lc "if [ -f /opt/arelle/requirements.txt ]; then \
      pip install --no-cache-dir -r /opt/arelle/requirements.txt; \
    else \
      pip install --no-cache-dir regex lxml isodate; \
    fi"
RUN pip install --no-cache-dir arelle-release

FROM base AS app
COPY --from=arelle /opt/arelle /opt/arelle
COPY backend/requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt
RUN sh -lc "if [ -f /opt/arelle/requirements.txt ]; then \
      pip install --no-cache-dir -r /opt/arelle/requirements.txt; \
    else \
      pip install --no-cache-dir regex lxml isodate; \
    fi"
RUN pip install --no-cache-dir arelle-release
COPY backend /app
ENV ARELLE_CACHE_DIR=/app/arelle_cache

EXPOSE 8000

CMD ["sh", "-c", "python manage.py collectstatic --noinput && mkdir -p $ARELLE_CACHE_DIR && python manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers ${WEB_CONCURRENCY:-2} --threads ${WEB_THREADS:-4}"]


